/*
 * SearchAlgorithmsView.java
 */
package searchalgorithms;

import org.jdesktop.application.Action;
import org.jdesktop.application.ResourceMap;
import org.jdesktop.application.SingleFrameApplication;
import org.jdesktop.application.FrameView;
import org.jdesktop.application.TaskMonitor;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;
import javax.swing.Icon;
import javax.swing.JDialog;
import javax.swing.JFrame;

/**
 * The application's main frame.
 */
public class SearchAlgorithmsView extends FrameView {

    private BEST bestEngine = null;
    private BFS breadthEngine = null;
    private DFS dfsEngine = null;
    private Hill hillEngine = null;

    public SearchAlgorithmsView(SingleFrameApplication app) {
        super(app);

        initComponents();

        // status bar initialization - message timeout, idle icon and busy animation, etc
        ResourceMap resourceMap = getResourceMap();




    }

    @Action
    public void showAboutBox() {
        if (aboutBox == null) {
            JFrame mainFrame = SearchAlgorithmsApp.getApplication().getMainFrame();
            aboutBox = new SearchAlgorithmsAboutBox(mainFrame);
            aboutBox.setLocationRelativeTo(mainFrame);
        }
        SearchAlgorithmsApp.getApplication().show(aboutBox);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        mainPanel = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        bridgeAlgorithmCombo = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        s1Text = new javax.swing.JTextField();
        s2Text = new javax.swing.JTextField();
        s3Text = new javax.swing.JTextField();
        s4Text = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        outputConsole = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        timeText = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        transportAlgoritmCombo = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        outputConsole2 = new javax.swing.JTextArea();
        search2 = new javax.swing.JButton();
        destinationCombo = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        menuBar = new javax.swing.JMenuBar();
        javax.swing.JMenu fileMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem exitMenuItem = new javax.swing.JMenuItem();
        javax.swing.JMenu helpMenu = new javax.swing.JMenu();
        javax.swing.JMenuItem aboutMenuItem = new javax.swing.JMenuItem();
        jPanel2 = new javax.swing.JPanel();

        mainPanel.setName("mainPanel"); // NOI18N

        jTabbedPane1.setMinimumSize(new java.awt.Dimension(7, 5));
        jTabbedPane1.setName("jTabbedPane1"); // NOI18N

        jPanel1.setName("jPanel1"); // NOI18N

        bridgeAlgorithmCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BFS", "DFS" }));
        bridgeAlgorithmCombo.setName("algorithmCombo"); // NOI18N

        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(searchalgorithms.SearchAlgorithmsApp.class).getContext().getResourceMap(SearchAlgorithmsView.class);
        jLabel1.setText(resourceMap.getString("jLabel1.text")); // NOI18N
        jLabel1.setName("jLabel1"); // NOI18N

        jLabel2.setText(resourceMap.getString("jLabel2.text")); // NOI18N
        jLabel2.setName("jLabel2"); // NOI18N

        jLabel3.setText(resourceMap.getString("jLabel3.text")); // NOI18N
        jLabel3.setName("jLabel3"); // NOI18N

        jLabel4.setText(resourceMap.getString("jLabel4.text")); // NOI18N
        jLabel4.setName("jLabel4"); // NOI18N

        jLabel5.setText(resourceMap.getString("jLabel5.text")); // NOI18N
        jLabel5.setName("jLabel5"); // NOI18N

        s1Text.setText(resourceMap.getString("s1Text.text")); // NOI18N
        s1Text.setName("s1Text"); // NOI18N

        s2Text.setText(resourceMap.getString("s2Text.text")); // NOI18N
        s2Text.setName("s2Text"); // NOI18N

        s3Text.setText(resourceMap.getString("s3Text.text")); // NOI18N
        s3Text.setName("s3Text"); // NOI18N

        s4Text.setText(resourceMap.getString("s4Text.text")); // NOI18N
        s4Text.setName("s4Text"); // NOI18N

        javax.swing.ActionMap actionMap = org.jdesktop.application.Application.getInstance(searchalgorithms.SearchAlgorithmsApp.class).getContext().getActionMap(SearchAlgorithmsView.class, this);
        jButton1.setAction(actionMap.get("search")); // NOI18N
        jButton1.setText(resourceMap.getString("searchBtn.text")); // NOI18N
        jButton1.setName("searchBtn"); // NOI18N

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        outputConsole.setColumns(20);
        outputConsole.setRows(5);
        outputConsole.setName("outputTxtArea"); // NOI18N
        jScrollPane1.setViewportView(outputConsole);

        jLabel6.setText(resourceMap.getString("jLabel6.text")); // NOI18N
        jLabel6.setName("jLabel6"); // NOI18N

        timeText.setText(resourceMap.getString("timeText.text")); // NOI18N
        timeText.setName("timeText"); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel1)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(timeText)
                    .addComponent(s4Text)
                    .addComponent(s3Text)
                    .addComponent(s2Text)
                    .addComponent(s1Text)
                    .addComponent(bridgeAlgorithmCombo, 0, 61, Short.MAX_VALUE))
                .addContainerGap(140, Short.MAX_VALUE))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(157, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(151, 151, 151))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bridgeAlgorithmCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(s1Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(s2Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(s3Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(s4Text, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(timeText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel1.TabConstraints.tabTitle"), jPanel1); // NOI18N

        jPanel3.setName("jPanel3"); // NOI18N

        jLabel7.setText(resourceMap.getString("jLabel7.text")); // NOI18N
        jLabel7.setName("jLabel7"); // NOI18N

        transportAlgoritmCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "BestFirstSearch", "Hill Climbing" }));
        transportAlgoritmCombo.setName("transportAlgoritmCombo"); // NOI18N

        jScrollPane2.setName("jScrollPane2"); // NOI18N

        outputConsole2.setColumns(20);
        outputConsole2.setRows(5);
        outputConsole2.setName("outputConsole2"); // NOI18N
        jScrollPane2.setViewportView(outputConsole2);

        search2.setText(resourceMap.getString("search2.text")); // NOI18N
        search2.setName("search2"); // NOI18N
        search2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                search2MousePressed(evt);
            }
        });

        destinationCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Sibu", "Bintulu", "Miri" }));
        destinationCombo.setName("destinationCombo"); // NOI18N

        jLabel8.setText(resourceMap.getString("jLabel8.text")); // NOI18N
        jLabel8.setName("jLabel8"); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 395, Short.MAX_VALUE)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(jLabel7)
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel8)
                        .addGap(7, 7, 7)))
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(destinationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(transportAlgoritmCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(141, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(152, 152, 152)
                .addComponent(search2)
                .addContainerGap(156, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(transportAlgoritmCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(destinationCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(search2)
                .addGap(13, 13, 13)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab(resourceMap.getString("jPanel3.TabConstraints.tabTitle"), jPanel3); // NOI18N

        javax.swing.GroupLayout mainPanelLayout = new javax.swing.GroupLayout(mainPanel);
        mainPanel.setLayout(mainPanelLayout);
        mainPanelLayout.setHorizontalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        mainPanelLayout.setVerticalGroup(
            mainPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 551, Short.MAX_VALUE)
        );

        jTabbedPane1.getAccessibleContext().setAccessibleParent(jTabbedPane1);

        menuBar.setName("menuBar"); // NOI18N

        fileMenu.setText(resourceMap.getString("fileMenu.text")); // NOI18N
        fileMenu.setName("fileMenu"); // NOI18N

        exitMenuItem.setAction(actionMap.get("quit")); // NOI18N
        exitMenuItem.setName("exitMenuItem"); // NOI18N
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        helpMenu.setText(resourceMap.getString("helpMenu.text")); // NOI18N
        helpMenu.setName("helpMenu"); // NOI18N

        aboutMenuItem.setAction(actionMap.get("showAboutBox")); // NOI18N
        aboutMenuItem.setName("aboutMenuItem"); // NOI18N
        helpMenu.add(aboutMenuItem);

        menuBar.add(helpMenu);

        jPanel2.setName("jPanel2"); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setComponent(mainPanel);
        setMenuBar(menuBar);
    }// </editor-fold>//GEN-END:initComponents

    private void search2MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_search2MousePressed
        bestEngine = new BEST();
        hillEngine = new Hill();

        boolean result = false;
        String output = "";
        String destination=null;
        if(destinationCombo.getSelectedIndex()==0)
        {
            destination="Sibu";
        }
 else if(destinationCombo.getSelectedIndex()==1)
        {
     destination="Bintulu";
 }
 else
        {
            destination="Miri";
 }

        if (transportAlgoritmCombo.getSelectedIndex() == 0) {
            bestEngine.setGoal(destination);
            result = bestEngine.runEngine();

            if (result == true) {
                output = "\nBest First found a solution\n";
                output += bestEngine.getOutput() + bestEngine.getStatistics();
            } else {
                output = "\nBest First could not find a solution\n";
                output += bestEngine.getOutput() + bestEngine.getStatistics();

            }
            outputConsole2.setText(output);
        } else {
            hillEngine.setGoal(destination);
            result = hillEngine.runEngine();
            
            if (result == true) {
                output = "\nHill Climbing Search found a solution\n";
                output += hillEngine.getOutput() + hillEngine.getStatistics();
            } else {
                output = "\nHill Climbing Search could not find a solution\n";
                output += hillEngine.getOutput() + hillEngine.getStatistics();

            }
            outputConsole2.setText(output);
        }


    }//GEN-LAST:event_search2MousePressed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox bridgeAlgorithmCombo;
    private javax.swing.JComboBox destinationCombo;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JPanel mainPanel;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JTextArea outputConsole;
    private javax.swing.JTextArea outputConsole2;
    private javax.swing.JTextField s1Text;
    private javax.swing.JTextField s2Text;
    private javax.swing.JTextField s3Text;
    private javax.swing.JTextField s4Text;
    private javax.swing.JButton search2;
    private javax.swing.JTextField timeText;
    private javax.swing.JComboBox transportAlgoritmCombo;
    // End of variables declaration//GEN-END:variables

    @Action
    public void search() {

        boolean result = false;
        String output = "";
        if (bridgeAlgorithmCombo.getSelectedIndex() == 0) {
            breadthEngine = new BFS();
            //  breadthEngine.resetEngine();
            outputConsole.setText("");
            breadthEngine.setS1Cost(Integer.parseInt(s1Text.getText()));
            breadthEngine.setS2Cost(Integer.parseInt(s2Text.getText()));
            breadthEngine.setS3Cost(Integer.parseInt(s3Text.getText()));
            breadthEngine.setS4Cost(Integer.parseInt(s4Text.getText()));
            breadthEngine.setTimeLimit(Integer.parseInt(timeText.getText()));
            result = breadthEngine.runEngine();

            if (result == true) {
                output = "\nBreadth First found a solution within specified time\n";
                output += breadthEngine.getOutput() + breadthEngine.getStatistics();
            } else {
                output = "\nBreadth First could not find a solution within specified time\n";
                output += breadthEngine.getOutput() + breadthEngine.getStatistics();
            }
        } else if (bridgeAlgorithmCombo.getSelectedIndex() == 1) {


            dfsEngine = new DFS();
            //  breadthEngine.resetEngine();
            outputConsole.setText("");
            dfsEngine.setS1Cost(Integer.parseInt(s1Text.getText()));
            dfsEngine.setS2Cost(Integer.parseInt(s2Text.getText()));
            dfsEngine.setS3Cost(Integer.parseInt(s3Text.getText()));
            dfsEngine.setS4Cost(Integer.parseInt(s4Text.getText()));
            dfsEngine.setTimeLimit(Integer.parseInt(timeText.getText()));
            result = dfsEngine.runEngine();

            if (result == true) {
                output = "\nDepth First found a solution within specified time\n";
                output += dfsEngine.getOutput() + dfsEngine.getStatistics();
            } else {
                output = "\nDepth First could not find a solution within specified time\n";
                output += dfsEngine.getOutput() + dfsEngine.getStatistics();
                ;
            }
            System.out.println("Dfs");
        }



        outputConsole.setText(output);

    }
    private JDialog aboutBox;
}
